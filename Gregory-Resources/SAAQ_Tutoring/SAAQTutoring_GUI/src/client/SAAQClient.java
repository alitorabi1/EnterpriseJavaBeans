package client;

import ejb.SAAQTutoringServiceRemote;
import entities.Car;
import entities.Owner;
import java.util.List;
import java.util.Properties;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


public class SAAQClient extends javax.swing.JFrame {
    
    SAAQTutoringServiceRemote service;
    DefaultListModel ownersModel;
    DefaultListModel carsModel;

    
    
    public SAAQClient() {
        try {
            Properties props = new Properties();
            props.setProperty("java.naming.factory.initial", "com.sun.enterprise.naming.SerialInitContextFactory");
            InitialContext ctx = new InitialContext(props);
            service = (SAAQTutoringServiceRemote) ctx.lookup(SAAQTutoringServiceRemote.class.getName());            
            ownersModel = new DefaultListModel<Owner>();
            carsModel = new DefaultListModel<Car>();          
            
            initComponents();                    
            
            updateOwnerList();
        } catch (NamingException ex) {
            JOptionPane.showMessageDialog(null, "Error connectiong to Glassfish");
            throw new RuntimeException("Error connecting to Glassfish", ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfOwner = new javax.swing.JTextField();
        btOwnerAdd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfCar = new javax.swing.JTextField();
        btCarAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlOwners = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlCars = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Owner");

        btOwnerAdd.setText("Add");
        btOwnerAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOwnerAddActionPerformed(evt);
            }
        });

        jLabel2.setText("Car:");

        btCarAdd.setText("Add");
        btCarAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCarAddActionPerformed(evt);
            }
        });

        jLabel3.setText("Owners:");

        jlOwners.setModel(ownersModel);
        jlOwners.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlOwnersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jlOwners);

        jLabel4.setText("Cars:");

        jlCars.setModel(carsModel);
        jScrollPane2.setViewportView(jlCars);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfOwner, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btOwnerAdd))
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfCar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCarAdd))
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btOwnerAdd)
                    .addComponent(jLabel2)
                    .addComponent(tfCar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCarAdd))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btOwnerAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOwnerAddActionPerformed
        try{
        String ownerName = tfOwner.getText();
        
        if(ownerName.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please provide an owner name ");
            return;
        }
        service.addOwner(new Owner(ownerName));
        updateOwnerList();
        
        } catch(RuntimeException ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Could not perform operation ");
        }
       
    }//GEN-LAST:event_btOwnerAddActionPerformed

    private void btCarAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCarAddActionPerformed
       try{
        String makeModel = tfCar.getText();
        if(makeModel.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please provide a car name ");
            return;
        }
        if(jlOwners.isSelectionEmpty()){
            JOptionPane.showMessageDialog(this, "Please select an owner first ");
            return;
        }
        Owner owner = (Owner) jlOwners.getSelectedValue();
        service.addCar(new Car(makeModel, owner));
        updateCarsList(owner);
       }catch(RuntimeException ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Could not perform operation ");
        }
    }//GEN-LAST:event_btCarAddActionPerformed

    private void jlOwnersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlOwnersValueChanged
        Owner owner = (Owner) jlOwners.getSelectedValue();
        updateCarsList(owner);
    }//GEN-LAST:event_jlOwnersValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SAAQClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SAAQClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SAAQClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SAAQClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SAAQClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCarAdd;
    private javax.swing.JButton btOwnerAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<Car> jlCars;
    private javax.swing.JList<Owner> jlOwners;
    private javax.swing.JTextField tfCar;
    private javax.swing.JTextField tfOwner;
    // End of variables declaration//GEN-END:variables

    private void updateOwnerList() {
        List<Owner> list = service.getAllOwners();
        ownersModel.removeAllElements();
        for(Owner o: list){
           ownersModel.addElement(o);
        }
    }

    private void updateCarsList(Owner owner) {
        List<Car> list = service.getCarsByOwner(owner);
        carsModel.removeAllElements();
        for(Car car: list ){
            carsModel.addElement(car);
        }
        
    }
}
